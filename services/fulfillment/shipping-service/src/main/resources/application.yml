server:
  port: 8088

grpc:
  server:
    port: 9089
    enable-reflection: true
  client:
    order-service:
      address: static://order-service:9087
      negotiation-type: plaintext
      enable-keep-alive: true
      keep-alive-time: 30s
      keep-alive-timeout: 5s
    user-service:
      address: static://user-service:9083
      negotiation-type: plaintext
      enable-keep-alive: true
      keep-alive-time: 30s
      keep-alive-timeout: 5s

spring:
  application:
    name: shipping-service

  datasource:
    url: jdbc:mysql://localhost:3306/shipping_service?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
    username: root
    password: password
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
      idle-timeout: 300000
      connection-timeout: 20000
      leak-detection-threshold: 60000

  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
        format_sql: true
        use_sql_comments: true
        jdbc:
          batch_size: 20
        order_inserts: true
        order_updates: true

  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: shipping-service
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: "com.ecommerce.shared.models.events"
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    export:
      prometheus:
        enabled: true

logging:
  level:
    com.ecommerce.shippingservice: INFO
    org.springframework.kafka: WARN
    org.hibernate.SQL: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level [%X{tenantId}] [%X{correlationId}] %logger{36} - %msg%n"

# Carrier Configuration
carriers:
  fedex:
    enabled: true
    api-url: "https://apis.fedex.com"
    timeout: 30000
  ups:
    enabled: true
    api-url: "https://onlinetools.ups.com"
    timeout: 30000
  usps:
    enabled: false
    api-url: "https://secure.shippingapis.com"
    timeout: 30000

# Shipping Configuration
shipping:
  default-weight-unit: KG
  default-currency: USD
  tracking-update-interval: 3600000 # 1 hour in milliseconds
  max-tracking-events: 50
  shipment-number-prefix: "SH"
  default-carrier: "fedex"
  default-service: "GROUND"
  auto-ship-on-creation: true
  tracking-update-batch-size: 50
  tracking-update-enabled: true

# Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      carrier-api:
        register-health-indicator: true
        sliding-window-size: 10
        minimum-number-of-calls: 5
        permitted-number-of-calls-in-half-open-state: 3
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 30s
        failure-rate-threshold: 50
        event-consumer-buffer-size: 10
        record-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
      fedex-api:
        register-health-indicator: true
        sliding-window-size: 8
        minimum-number-of-calls: 4
        permitted-number-of-calls-in-half-open-state: 2
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 45s
        failure-rate-threshold: 60
        event-consumer-buffer-size: 10
      ups-api:
        register-health-indicator: true
        sliding-window-size: 8
        minimum-number-of-calls: 4
        permitted-number-of-calls-in-half-open-state: 2
        automatic-transition-from-open-to-half-open-enabled: true
        wait-duration-in-open-state: 45s
        failure-rate-threshold: 60
        event-consumer-buffer-size: 10

  retry:
    instances:
      carrier-api:
        max-attempts: 3
        wait-duration: 1s
        exponential-backoff-multiplier: 2
        retry-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
        ignore-exceptions:
          - java.lang.IllegalArgumentException
      fedex-api:
        max-attempts: 4
        wait-duration: 2s
        exponential-backoff-multiplier: 1.5
        retry-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException
      ups-api:
        max-attempts: 4
        wait-duration: 2s
        exponential-backoff-multiplier: 1.5
        retry-exceptions:
          - java.io.IOException
          - java.util.concurrent.TimeoutException
          - org.springframework.web.client.ResourceAccessException

  bulkhead:
    instances:
      carrier-api:
        max-concurrent-calls: 10
        max-wait-duration: 5s
      fedex-api:
        max-concurrent-calls: 5
        max-wait-duration: 3s
      ups-api:
        max-concurrent-calls: 5
        max-wait-duration: 3s

  timelimiter:
    instances:
      carrier-api:
        timeout-duration: 30s
        cancel-running-future: true
      fedex-api:
        timeout-duration: 25s
        cancel-running-future: true
      ups-api:
        timeout-duration: 25s
        cancel-running-future: true
