syntax = "proto3";

package ecommerce.shipping;

import "common.proto";

option java_package = "com.ecommerce.shippingservice.proto";
option java_outer_classname = "ShippingServiceProtos";

// Shipping Service gRPC interface
service ShippingService {
  rpc CreateShipment(CreateShipmentRequest) returns (CreateShipmentResponse);
  rpc GetShipment(GetShipmentRequest) returns (GetShipmentResponse);
  rpc GetShipmentsByOrder(GetShipmentsByOrderRequest) returns (GetShipmentsByOrderResponse);
  rpc UpdateShipmentStatus(UpdateShipmentStatusRequest) returns (UpdateShipmentStatusResponse);
  rpc TrackShipment(TrackShipmentRequest) returns (TrackShipmentResponse);
}

// Create shipment for order
message CreateShipmentRequest {
  ecommerce.common.TenantContext context = 1;
  int64 order_id = 2;
  string carrier = 3;
  string service_type = 4;
  ecommerce.common.Address shipping_address = 5;
  repeated ShipmentItem items = 6;
}

message CreateShipmentResponse {
  bool success = 1;
  int64 shipment_id = 2;
  string tracking_number = 3;
  string error_message = 4;
}

// Get shipment by ID
message GetShipmentRequest {
  ecommerce.common.TenantContext context = 1;
  int64 shipment_id = 2;
}

message GetShipmentResponse {
  Shipment shipment = 1;
}

// Get shipments by order ID
message GetShipmentsByOrderRequest {
  ecommerce.common.TenantContext context = 1;
  int64 order_id = 2;
}

message GetShipmentsByOrderResponse {
  repeated Shipment shipments = 1;
}

// Update shipment status
message UpdateShipmentStatusRequest {
  ecommerce.common.TenantContext context = 1;
  int64 shipment_id = 2;
  string status = 3;
  string location = 4;
  string notes = 5;
}

message UpdateShipmentStatusResponse {
  bool success = 1;
  string error_message = 2;
}

// Track shipment
message TrackShipmentRequest {
  ecommerce.common.TenantContext context = 1;
  string tracking_number = 2;
}

message TrackShipmentResponse {
  bool success = 1;
  Shipment shipment = 2;
  repeated TrackingEvent tracking_events = 3;
  string error_message = 4;
}

// Shipment data model
message Shipment {
  int64 id = 1;
  int64 order_id = 2;
  string tracking_number = 3;
  string carrier = 4;
  string service_type = 5;
  string status = 6;
  ecommerce.common.Address shipping_address = 7;
  repeated ShipmentItem items = 8;
  int64 created_at = 9;
  int64 updated_at = 10;
  int64 estimated_delivery = 11;
}

// Shipment item data model
message ShipmentItem {
  string product_id = 1;
  string sku = 2;
  string product_name = 3;
  int32 quantity = 4;
}

// Tracking event data model
message TrackingEvent {
  string status = 1;
  string location = 2;
  string description = 3;
  int64 timestamp = 4;
}